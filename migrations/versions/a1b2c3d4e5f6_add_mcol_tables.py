"""Add MCOL tables (KpiSnapshot, McolDecisionLog)

Revision ID: a1b2c3d4e5f6
Revises: 9a1b2c3d4e5f 
Create Date: 2025-04-08 12:01:00.000000 

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1b2c3d4e5f6'
down_revision: Union[str, None] = '9a1b2c3d4e5f' # Points to the previous migration's revision ID
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kpi_snapshots',
    sa.Column('snapshot_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('awaiting_payment_reports', sa.Integer(), nullable=True),
    sa.Column('pending_reports', sa.Integer(), nullable=True),
    sa.Column('processing_reports', sa.Integer(), nullable=True),
    sa.Column('completed_reports_24h', sa.Integer(), nullable=True),
    sa.Column('failed_reports_24h', sa.Integer(), nullable=True),
    sa.Column('avg_report_time_seconds', sa.Float(), nullable=True),
    sa.Column('new_prospects_24h', sa.Integer(), nullable=True),
    sa.Column('emails_sent_24h', sa.Integer(), nullable=True),
    sa.Column('active_email_accounts', sa.Integer(), nullable=True),
    sa.Column('deactivated_accounts_24h', sa.Integer(), nullable=True),
    sa.Column('bounce_rate_24h', sa.Float(), nullable=True),
    sa.Column('revenue_24h', sa.Float(), server_default='0.0', nullable=True),
    sa.Column('orders_created_24h', sa.Integer(), server_default='0', nullable=True),
    sa.PrimaryKeyConstraint('snapshot_id', name=op.f('pk_kpi_snapshots'))
    )
    op.create_index(op.f('ix_kpi_snapshots_snapshot_id'), 'kpi_snapshots', ['snapshot_id'], unique=False)
    op.create_index(op.f('ix_kpi_snapshots_timestamp'), 'kpi_snapshots', ['timestamp'], unique=False)
    op.create_table('mcol_decision_log',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('kpi_snapshot_id', sa.Integer(), nullable=True),
    sa.Column('priority_problem', sa.Text(), nullable=True),
    sa.Column('analysis_summary', sa.Text(), nullable=True),
    sa.Column('generated_strategy', sa.Text(), nullable=True),
    sa.Column('chosen_action', sa.Text(), nullable=True),
    sa.Column('action_parameters', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('action_status', sa.String(length=50), server_default='PENDING', nullable=True),
    sa.Column('action_result', sa.Text(), nullable=True),
    sa.Column('follow_up_kpi_snapshot_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['follow_up_kpi_snapshot_id'], ['kpi_snapshots.snapshot_id'], name=op.f('fk_mcol_decision_log_follow_up_kpi_snapshot_id_kpi_snapshots')),
    sa.ForeignKeyConstraint(['kpi_snapshot_id'], ['kpi_snapshots.snapshot_id'], name=op.f('fk_mcol_decision_log_kpi_snapshot_id_kpi_snapshots')),
    sa.PrimaryKeyConstraint('log_id', name=op.f('pk_mcol_decision_log'))
    )
    op.create_index(op.f('ix_mcol_decision_log_log_id'), 'mcol_decision_log', ['log_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mcol_decision_log_log_id'), table_name='mcol_decision_log')
    op.drop_table('mcol_decision_log')
    op.drop_index(op.f('ix_kpi_snapshots_timestamp'), table_name='kpi_snapshots')
    op.drop_index(op.f('ix_kpi_snapshots_snapshot_id'), table_name='kpi_snapshots')
    op.drop_table('kpi_snapshots')
    # ### end Alembic commands ###