version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: Nexus Plan_prime_db # Keep consistent name
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      # These MUST be set in Coolify secrets/env vars
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # ports: # Do not expose DB publicly
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -q"] # Added -q for quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s # IMPORTANT: Wait 15s before first health check
    restart: unless-stopped

  odr-service: # Keep ODR service
    build:
      context: .
      dockerfile: Dockerfile # Uses the same Dockerfile base
    container_name: Nexus Plan_prime_odr # Keep consistent name
    working_dir: /app/open-deep-research-main
    command: sh -c "npm install --omit=dev --legacy-peer-deps && npm run build && npm start -p 3000"
    restart: unless-stopped
    depends_on:
      - db
    environment:
      # Pass necessary API keys for ODR's operation (if it uses env vars)
      # Ensure OPENROUTER_API_KEY is passed if ODR needs it
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-}
      # Add other keys ODR might need (Gemini, OpenAI etc. if configured in ODR)
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-}
      AZURE_SUB_KEY: ${AZURE_SUB_KEY:-}
      GOOGLE_SEARCH_API_KEY: ${GOOGLE_SEARCH_API_KEY:-}
      GOOGLE_SEARCH_CX: ${GOOGLE_SEARCH_CX:-}
      EXA_API_KEY: ${EXA_API_KEY:-}
      HOST: '0.0.0.0'
      PORT: '3000'
    # ports: # No need to expose internally

  app: # Main Nexus Plan FastAPI App
    build:
      context: .
      dockerfile: Dockerfile # Uses the same Dockerfile base
    container_name: Nexus Plan_prime_app # Keep consistent name
    env_file:
      - .env # Load base .env if present
    environment:
      # Core DB/Payment/Key Settings (MUST be set in Coolify)
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      LEMONSQUEEZY_API_KEY: ${LEMONSQUEEZY_API_KEY}
      LEMONSQUEEZY_STORE_ID: ${LEMONSQUEEZY_STORE_ID}
      LEMONSQUEEZY_VARIANT_STANDARD: ${LEMONSQUEEZY_VARIANT_STANDARD}
      LEMONSQUEEZY_VARIANT_PREMIUM: ${LEMONSQUEEZY_VARIANT_PREMIUM}
      LEMONSQUEEZY_WEBHOOK_SECRET: ${LEMONSQUEEZY_WEBHOOK_SECRET}
      AGENCY_BASE_URL: ${AGENCY_BASE_URL} # CRITICAL
      SECRET_KEY: ${SECRET_KEY} # CRITICAL
      ENCRYPTION_KEY: ${ENCRYPTION_KEY} # CRITICAL
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY} # CRITICAL (Single Key)
      LLM_PROVIDER: ${LLM_PROVIDER:-openrouter}

      # Proxy Settings (Read from .env via Coolify)
      PROXY_ENABLED: ${PROXY_ENABLED:-True} # Default to True if not set
      PROXY_HOST: ${PROXY_HOST}
      PROXY_PORT: ${PROXY_PORT}
      PROXY_USER: ${PROXY_USER}
      PROXY_PASSWORD: ${PROXY_PASSWORD}
      PROXY_LIST: ${PROXY_LIST:-} # Allow list override

      # Other Settings (Can be overridden by Coolify)
      EMAIL_SENDER_NAME: ${EMAIL_SENDER_NAME:-Nexus Plan AI}
      MCOL_IMPLEMENTATION_MODE: ${MCOL_IMPLEMENTATION_MODE:-EXECUTE_SAFE_CONFIG}
      OPEN_DEEP_RESEARCH_SERVICE_URL: "http://odr-service:3000" # Internal link

    depends_on:
      db:
        condition: service_healthy
      odr-service:
         condition: service_started
    ports:
      - "8000:8000" # Expose FastAPI app port
    restart: unless-stopped
    # Use multiple workers for higher throughput
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

volumes:
  postgres_data:
    driver: local